{"swagger":"2.0","info":{"description":"go:generate swagger generate spec -o ./swagger.json"},"paths":{"/v1/send":{"post":{"description":"Adds email into the mailer queue","consumes":["application/json"],"produces":["application/json"],"schemes":["http"],"operationId":"sendParams","parameters":[{"type":"string","x-go-name":"APIKey","description":"API secure key","name":"api_key","in":"query","required":true},{"type":"string","x-go-name":"Token","description":"Access Token","name":"token","in":"query","required":true},{"x-go-name":"Body","description":"Body parameters. body.body must be a valid HTML inside a \u003cbody\u003e\u003c/body\u003e","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/Email"}}],"responses":{"200":{"$ref":"#/responses/sendResponse"},"401":{"$ref":"#/responses/errorResponse"}}}},"/v1/token":{"get":{"description":"Get access token","consumes":["application/json"],"produces":["application/json"],"schemes":["http"],"operationId":"tokenParams","parameters":[{"type":"string","x-go-name":"APIKey","description":"API secure key","name":"api_key","in":"query","required":true}],"responses":{"200":{"$ref":"#/responses/tokenResponse"},"401":{"$ref":"#/responses/errorResponse"}}}},"/v1/track":{"post":{"description":"Mark email as opened by Client when tracker image is loaded","produces":["image/png"],"schemes":["http"],"operationId":"trackParams","parameters":[{"type":"integer","format":"int64","x-go-name":"ID","description":"Email ID","name":"id","in":"query","required":true}]}}},"definitions":{"Address":{"description":"Address struct","type":"object","properties":{"email":{"type":"string","x-go-name":"Email"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_sender":{"type":"boolean","x-go-name":"IsSender"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"github.com/logpacker/mailer/pkg/shared"},"Duration":{"description":"A Duration represents the elapsed time between two instants\nas an int64 nanosecond count. The representation limits the\nlargest representable duration to approximately 290 years.","x-go-package":"time"},"Email":{"description":"Email struct","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"created_at":{"x-go-name":"CreatedAt","$ref":"#/definitions/Time"},"from":{"x-go-name":"From","$ref":"#/definitions/Address"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"opened_at":{"x-go-name":"OpenedAt","$ref":"#/definitions/Time"},"sent_at":{"x-go-name":"SentAt","$ref":"#/definitions/Time"},"status":{"x-go-name":"Status","$ref":"#/definitions/Status"},"subject":{"type":"string","x-go-name":"Subject"},"to":{"x-go-name":"To","$ref":"#/definitions/Address"},"url_unsubscribe":{"type":"string","x-go-name":"URLUnsubscribe"}},"x-go-package":"github.com/logpacker/mailer/pkg/shared"},"MailerConfig":{"description":"MailerConfig struct","type":"object","properties":{"APIPublicProxy":{"type":"string"},"BeanstalkdAddr":{"type":"string"},"MySQLAddr":{"type":"string"},"SMTPAddr":{"type":"string"}},"x-go-package":"github.com/logpacker/mailer/pkg/shared"},"Month":{"title":"A Month specifies a month of the year (January = 1, ...).","x-go-package":"time"},"OpenEmail":{"description":"OpenEmail struct","type":"object","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"}},"x-go-package":"github.com/logpacker/mailer/pkg/shared"},"Status":{"description":"Status struct","type":"object","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"github.com/logpacker/mailer/pkg/shared"},"Time":{"description":"Programs using times should typically store and pass them as values,\nnot pointers. That is, time variables and struct fields should be of\ntype time.Time, not *time.Time. A Time value can be used by\nmultiple goroutines simultaneously.\n\nTime instants can be compared using the Before, After, and Equal methods.\nThe Sub method subtracts two instants, producing a Duration.\nThe Add method adds a Time and a Duration, producing a Time.\n\nThe zero value of type Time is January 1, year 1, 00:00:00.000000000 UTC.\nAs this time is unlikely to come up in practice, the IsZero method gives\na simple way of detecting a time that has not been initialized explicitly.\n\nEach Time has associated with it a Location, consulted when computing the\npresentation form of the time, such as in the Format, Hour, and Year methods.\nThe methods Local, UTC, and In return a Time with a specific location.\nChanging the location in this way changes only the presentation; it does not\nchange the instant in time being denoted and therefore does not affect the\ncomputations described in earlier paragraphs.\n\nNote that the Go == operator compares not just the time instant but also the\nLocation. Therefore, Time values should not be used as map or database keys\nwithout first guaranteeing that the identical Location has been set for all\nvalues, which can be achieved through use of the UTC or Local method.","type":"object","title":"A Time represents an instant in time with nanosecond precision.","x-go-package":"time"},"Weekday":{"title":"A Weekday specifies a day of the week (Sunday = 0, ...).","x-go-package":"time"}},"responses":{"errorResponse":{"headers":{"message":{"type":"string"}}},"sendResponse":{"headers":{"status":{"type":"boolean"}}},"tokenResponse":{"headers":{"token":{"type":"string"}}}}}